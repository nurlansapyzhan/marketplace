"""migtaition0.1

Revision ID: 9535c8134038
Revises: 20a1ef17adc6
Create Date: 2023-10-05 14:29:15.901990

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9535c8134038'
down_revision: Union[str, None] = '20a1ef17adc6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_who_left_review_id', sa.Integer(), nullable=False),
    sa.Column('to_the_seller_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('review_id', sa.Integer(), nullable=True),
    sa.Column('review_text', sa.String(), nullable=True),
    sa.Column('grade', sa.Float(), nullable=True),
    sa.Column('added_db_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], ),
    sa.ForeignKeyConstraint(['to_the_seller_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user_who_left_review_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_id'), 'review', ['id'], unique=False)
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_address_id'), 'address', ['id'], unique=False)
    op.create_table('discount_coupon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('coupon_code', sa.String(), nullable=False),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('smallest_check_amount', sa.Float(), nullable=True),
    sa.Column('largest_check_amount', sa.Float(), nullable=True),
    sa.Column('total_number_activations', sa.Integer(), nullable=True),
    sa.Column('number_activations_per_user', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('coupon_start_date', sa.DateTime(), nullable=True),
    sa.Column('coupon_expiration_date', sa.DateTime(), nullable=True),
    sa.Column('coupon_creation_date', sa.DateTime(), nullable=True),
    sa.Column('coupon_delete_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discount_coupon_id'), 'discount_coupon', ['id'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_id'), 'notification', ['id'], unique=False)
    op.create_table('payment_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_methods_id'), 'payment_methods', ['id'], unique=False)
    op.create_table('check',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('delivery_price', sa.Float(), nullable=True),
    sa.Column('payment_methods_id', sa.Integer(), nullable=True),
    sa.Column('basket_created_at', sa.DateTime(), nullable=True),
    sa.Column('check_created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['buyer_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['payment_methods_id'], ['payment_methods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_check_id'), 'check', ['id'], unique=False)
    op.create_table('order_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_status_id'), 'order_status', ['id'], unique=False)
    op.create_table('users_coupon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('seller_provides_coupon_id', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('buyer_use_coupon_id', sa.Integer(), nullable=True),
    sa.Column('coupon_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['buyer_use_coupon_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['coupon_id'], ['discount_coupon.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['seller_provides_coupon_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_coupon_id'), 'users_coupon', ['id'], unique=False)
    op.create_table('order_delivery_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('check_id', sa.Integer(), nullable=False),
    sa.Column('order_status_id', sa.Integer(), nullable=False),
    sa.Column('date_presentation_status', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['check_id'], ['check.id'], ),
    sa.ForeignKeyConstraint(['order_status_id'], ['order_status.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_delivery_status_id'), 'order_delivery_status', ['id'], unique=False)
    op.create_table('products_basket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('check_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('coupon_id', sa.Integer(), nullable=True),
    sa.Column('total_price_with_coupon', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['check_id'], ['check.id'], ),
    sa.ForeignKeyConstraint(['coupon_id'], ['discount_coupon.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_basket_id'), 'products_basket', ['id'], unique=False)
    op.add_column('seller_product', sa.Column('is_deleted', sa.Boolean(), nullable=False))
    op.add_column('seller_product', sa.Column('added_db_at', sa.DateTime(), nullable=True))
    op.add_column('seller_product', sa.Column('deleted_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('seller_product', 'deleted_at')
    op.drop_column('seller_product', 'added_db_at')
    op.drop_column('seller_product', 'is_deleted')
    op.drop_index(op.f('ix_products_basket_id'), table_name='products_basket')
    op.drop_table('products_basket')
    op.drop_index(op.f('ix_order_delivery_status_id'), table_name='order_delivery_status')
    op.drop_table('order_delivery_status')
    op.drop_index(op.f('ix_users_coupon_id'), table_name='users_coupon')
    op.drop_table('users_coupon')
    op.drop_index(op.f('ix_order_status_id'), table_name='order_status')
    op.drop_table('order_status')
    op.drop_index(op.f('ix_check_id'), table_name='check')
    op.drop_table('check')
    op.drop_index(op.f('ix_payment_methods_id'), table_name='payment_methods')
    op.drop_table('payment_methods')
    op.drop_index(op.f('ix_notification_id'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_discount_coupon_id'), table_name='discount_coupon')
    op.drop_table('discount_coupon')
    op.drop_index(op.f('ix_address_id'), table_name='address')
    op.drop_table('address')
    op.drop_index(op.f('ix_review_id'), table_name='review')
    op.drop_table('review')
    # ### end Alembic commands ###
